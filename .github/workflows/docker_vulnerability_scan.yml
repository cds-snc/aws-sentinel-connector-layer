name: Docker vulnerability scan

on:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

env:
  REPOSITORY: aws-sentinel-connector
  REGISTRY: public.ecr.aws/cds-snc

permissions:
  id-token: write
  security-events: write

jobs:
  docker-vulnerability-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::283582579564:role/aws-sentinel-connector-layer-apply
          role-session-name: SentinelGitHubActions
          aws-region: "us-east-1"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@261a7de32bda11ba01f4d75c4ed6caf3739e54be # v1.5.3
        with:
          registry-type: public

      - name: Get latest Docker image tag
        run: |
          IMAGE_TAG="$(aws ecr-public describe-images --output json --repository-name aws-sentinel-connector --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]' | jq . --raw-output)"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Docker vulnerability scan
        uses: cds-snc/security-tools/.github/actions/docker-scan@19c655b47ec24d168ecbc701cee18701ab55f071 # v2.1.1
        with:
          docker_image: "${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}"
          dockerfile_path: "layer/Dockerfile"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Logout of Amazon ECR
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
