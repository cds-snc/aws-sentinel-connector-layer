name: "Terraform Apply"

on:
  push:
    branches:
      - main

env:
  TERRAFORM_VERSION: 1.0.3
  TERRAGRUNT_VERSION: v0.31.1

jobs:
  terragrunt-apply:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ca-central-1
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Setup Terragrunt
        run: |
          mkdir -p bin
          wget -O bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/$TERRAGRUNT_VERSION/terragrunt_linux_amd64
          chmod +x bin/terragrunt
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - uses: dorny/paths-filter@v2.2.1
        id: filter
        with:
          filters: |
            azure:
              - 'azure/**'
            aws_cloud_trail:
              - 'aws/cloud_trail/**'
            aws_guard_duty:
              - 'aws/guard_duty/**'
            aws_security_hub:
              - 'aws/security_hub/**'

      - name: Apply Azure
        if: ${{ steps.filter.outputs.azure == 'true' }}
        working-directory: azure
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_google_pickle_string: ${{ secrets.TF_VARS_GOOGLEPICKLESTRING }}
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply AWS CloudTrail
        if: ${{ steps.filter.outputs.aws_cloud_trail == 'true' }}
        working-directory: aws/cloud_trail/terraform
        env:
          TF_VAR_customer_id: ${{ secrets.TF_VARS_LOG_ANALYTICS_CUSTOMER_ID }}
          TF_VAR_shared_key: ${{ secrets.TF_VARS_LOG_ANALYTICS_SHARED_KEY }}
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply AWS GuardDuty
        if: ${{ steps.filter.outputs.aws_guard_duty == 'true' }}
        working-directory: aws/guard_duty/terraform
        env:
          TF_VAR_customer_id: ${{ secrets.TF_VARS_LOG_ANALYTICS_CUSTOMER_ID }}
          TF_VAR_shared_key: ${{ secrets.TF_VARS_LOG_ANALYTICS_SHARED_KEY }}
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve

      - name: Apply AWS SecurityHub
        if: ${{ steps.filter.outputs.aws_security_hub == 'true' }}
        working-directory: aws/security_hub/terraform
        env:
          TF_VAR_customer_id: ${{ secrets.TF_VARS_LOG_ANALYTICS_CUSTOMER_ID }}
          TF_VAR_shared_key: ${{ secrets.TF_VARS_LOG_ANALYTICS_SHARED_KEY }}
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve
